2023 02 01
  정수
  tinyint
  smallint
  int
  bigint
  
  unsigned : 값의 범위가 0부터 시작되는 예약어 -- ex) tinyint 는 -128 ~ 127 의 범위를 갖고 있는데 tinyint unsigned 를 사용하면 0 ~ 255
  
  문자
  char
  varchar
  
  대량의 데이터형식
  text
  longtext
  blob
  longblob
  
  실수
  float
  double
  
  날짜  
  date : 날짜만 저장, YYYY-MM-DD 형식
  time : 시간만 저장, HH:MM:SS 형식
  datetime : 날짜 및 시간을 저장, YYYY-MM-DD HH:MM:SS 형식
  
  변수
  set @변수이름 = 변수값 -- 변수의 선언 및 값 입력
  select @변수이름; -- 변수의 값 출력
  
  prepare : 실행하지 않고 sql문만 준비
  execute : 실행
  using : 사용 ~
  
  형변환 : 명시적인 변환, 암시적인(자동) 변환
  cast() -- ex) cast(avg(price) as singed) from 테이블이름
  convert() : --ex) convert(avg(price), signed) from 테이블이름 //cast()랑 또옥같은데 인자값에 스타일을 줄 수 있다 
    데이터형식
    char
    signed : - 붙이는거 //-부터 시작
    unsinged : - 생략하고 //0부터
    date
    time
    datetime
    
  concat : 문자열 붙이는거 -- '이응' + '이응' 같은거 // concat('aa', 'dd','gg') 콤마(,) 가 + 의 기능을 한다
  
  조인(join)
    내부 조인 : 가장 많이씀 보통 조인! 하면 다 내부조인을 지칭 -- select 테이블하는 곳에 데이터가 있어야 내부조인하는 테이블에서 데이터를 가져올 수 있다
    일대다(one to many) 관계 : PK-FK 관계
    기본키(primary key, PK) : primary key(열이름)
    왜래키(foreign key, KF) : foreign key(열이름) references 연결할테이블명(열이름)
    ex) select * from 기준테이블a
            inner join 조인할테이블b
            on a.열이름 = b.열이름
          where a.열이름 = 행데이터;          
    on : 조건식
    
    외부조인 : 한쪽 테이블에만 데이터가 있어도 가져올 수 있다
    LEFT | RIGHT | FULL 방식
    left : 왼쪽 테이블의 내용은 모두 출력
    right : 오른쪽 테이블의 내용은 모두 출력 -- left 쓰면되서 얘 안쓴다..
    full : 양쪽 테이블의 내용 모두 출력
    
    ex) select *from 테이블A
            left outer join 테이블B
            on A.열이름 = B.열이름;
            
    ex) select *from 테이블A
            right outer join 테이블B
            on A.열이름 = B.열이름;
            
    기타조인
      상호 조인(cross join) : 테이블 * 테이블 -- 데이터베이스 뻥튀기할 때 씀 잘못쓰면 데이터베이스 터짐
      자체 조인(self join) : 하나의 테이블 안에서 조인 -- 거의 안쓰기는 하는데 알아만 두셈
      
      
  SQL 프로그래밍
    스토어드 프로시저
      delimiter $$
      create procedure 함수명()
      begin
        select * from 테이블명;
      end $$
      delimiter ;
      call 함수명();
      
    if문
      declare  : 변수 선언 -- declare 변수명 변수타입;
      into : selcet로 조회한 데이터를 변수에 담으라는 예약어
      
    case문 : 자바의 switch문과 비슷하나 조금 다르다 //매치법 말고 순차적 조건식
      case
        when
        when
        when
      end
      
    while문
      while 조건식 do
        sql 문장들
      end while;
      iterate[레이블] : 지정한 레이블로 가서 계속 진행 -- 자바의 continue문
      leave[레이블] : 지정한 레이블을 빠져나갑니다 -- 자바의 break문
      
    동적SQL
      prepare  
      execute 
      deallocate prepare

2023 02 02
  테이블 : 2차원구조 (열과행, x와y) 열 : 컬럼(column),필드(field) 행 : 로우(row), 레코드(record)
  백틱
  제약조건
    기본키(primary key) : 중복되지않고 비어있지 않음 (= unique + not null) // 기본키로 처리된 값을 변경하는 미친짓은 하지마라
    외래키(foreign key)
    고유키(unique)
    체크
    기본값
    null
    constraint : 제약사항
    on update cascade
    on delete cascade
  뷰
    단순뷰
    복합뷰
    
2023 02 03
    인덱스
      클러스터형 : PK, 사전, (기본키를 기준으로)내용이 정렬된다
      보조형 : UK, 책 뒤의 찾아보기, 추가적으로 내용이 삽입이 된다,정렬안됨
      clustered index
      secondary index
      show index
      alter table 테이블명
        add constraint
        primary key(열이름);
      
      내부 작동 원리
        노드(node)
        루트 노드
        리프 노드: mysql에서 페이지라고 부름
        페이지(page) : 최소의 저장 단위, 16Kbtye(16374bute)크기 -- 데이터1건만 입력해도 1개의 페이지가 필요
        
      실제 사용
        create index
        drop index
        show table status
        show table status like
        create index
        단순 보조 인덱스(simple secindary index) : 중복 허용
        고유 보조 인덱스(unique secondary index) : 중복 허용 안함
        analyze table : 생성된 인덱스를 실제로 적용시킴
        create unique index
        
